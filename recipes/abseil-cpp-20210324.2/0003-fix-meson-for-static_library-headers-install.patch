From 654995547d3402fa52932a3c0f8dcfb30deaf0fb Mon Sep 17 00:00:00 2001
From: zhoubo <zhoubo@iauto.com>
Date: Fri, 25 Nov 2022 10:33:41 +0800
Subject: [PATCH 3/3] fix meson for static_library & headers install

---
 meson.build | 363 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 363 insertions(+)

diff --git a/meson.build b/meson.build
index b573fee..feca154 100644
--- a/meson.build
+++ b/meson.build
@@ -199,18 +199,21 @@ absl_base_lib = static_library(
   absl_base_sources,
   include_directories: absl_include_dir,
   dependencies: [dependency('threads'), libatomic],
+  install : true,
 )
 
 absl_hash_lib = static_library(
   'absl_hash',
   absl_hash_sources,
   include_directories: absl_include_dir,
+  install : true,
 )
 
 absl_numeric_lib = static_library(
   'absl_numeric',
   absl_numeric_sources,
   include_directories: absl_include_dir,
+#  install : true,
 )
 
 absl_strings_lib = static_library(
@@ -221,6 +224,7 @@ absl_strings_lib = static_library(
     absl_base_lib,
     absl_numeric_lib,
   ],
+  install : true,
 )
 
 absl_debugging_lib = static_library(
@@ -232,6 +236,7 @@ absl_debugging_lib = static_library(
     absl_strings_lib,
   ],
   dependencies: libatomic,
+#  install : true,
 )
 
 absl_random_lib = static_library(
@@ -243,6 +248,7 @@ absl_random_lib = static_library(
     absl_strings_lib,
   ],
   dependencies: libatomic,
+#  install : true,
 )
 
 absl_time_lib = static_library(
@@ -256,12 +262,14 @@ absl_time_lib = static_library(
   ],
   # macOS only, upstream: https://github.com/abseil/abseil-cpp/pull/280
   dependencies : [dependency('CoreFoundation', required : false)],
+  install : true,
 )
 
 absl_types_lib = static_library(
   'absl_types',
   absl_types_sources,
   include_directories: absl_include_dir,
+  install : true,
 )
 
 absl_synchronization_lib = static_library(
@@ -273,6 +281,7 @@ absl_synchronization_lib = static_library(
     absl_debugging_lib,
     absl_time_lib,
   ],
+  install : true,
 )
 
 absl_container_lib = static_library(
@@ -286,6 +295,7 @@ absl_container_lib = static_library(
     absl_synchronization_lib,
     absl_time_lib,
   ],
+#  install : true,
 )
 
 absl_flags_lib = static_library(
@@ -300,6 +310,7 @@ absl_flags_lib = static_library(
     absl_synchronization_lib,
   ],
   dependencies: libatomic,
+#  install : true,
 )
 
 absl_status_lib = static_library(
@@ -310,6 +321,7 @@ absl_status_lib = static_library(
     absl_base_lib,
     absl_strings_lib,
   ],
+#  install : true,
 )
 
 # Dependencies
@@ -412,3 +424,354 @@ absl_status_dep = declare_dependency(
     absl_strings_dep,
   ],
 )
+
+##########################################################
+#   define headers to install_headers to public
+##########################################################
+
+absl_base_headers = files(
+  'absl/base/log_severity.h',
+  'absl/base/attributes.h',
+  'absl/base/config.h',
+  'absl/base/const_init.h',
+  'absl/base/macros.h',
+  'absl/base/optimization.h',
+  'absl/base/options.h',
+  'absl/base/policy_checks.h',
+  'absl/base/port.h',
+)
+install_headers(absl_base_headers, subdir:'absl/base/')
+
+absl_base_headers_internal = files(
+  'absl/base/internal/cycleclock.h',
+  'absl/base/internal/exponential_biased.h',
+  'absl/base/internal/low_level_alloc.h',
+  'absl/base/internal/periodic_sampler.h',
+  'absl/base/internal/raw_logging.h',
+  'absl/base/internal/scoped_set_env.h',
+  'absl/base/internal/spinlock_wait.h',
+  'absl/base/internal/spinlock.h',
+  'absl/base/internal/sysinfo.h',
+  'absl/base/internal/strerror.h',
+  'absl/base/internal/thread_identity.h',
+  'absl/base/internal/throw_delegate.h',
+  'absl/base/internal/unscaledcycleclock.h',
+  'absl/base/internal/identity.h',
+  'absl/base/internal/inline_variable.h',
+  'absl/base/internal/invoke.h',
+)
+install_headers(absl_base_headers_internal, subdir:'absl/base/internal/')
+
+absl_container_headers_internal = files(
+#  'absl/container/internal/hashtablez_sampler_force_weak_definition.cc',
+  'absl/container/internal/hashtablez_sampler.h',
+  'absl/container/internal/raw_hash_set.h',
+)
+install_headers(absl_container_headers_internal, subdir:'absl/container/internal/')
+
+absl_debugging_headers = files(
+  'absl/debugging/failure_signal_handler.h',
+#  'absl/debugging/leak_check_disable.cc',
+  'absl/debugging/leak_check.h',
+  'absl/debugging/stacktrace.h',
+  'absl/debugging/symbolize.h',
+)
+install_headers(absl_debugging_headers, subdir:'absl/debugging/')
+
+absl_debugging_headers_internal = files(
+  'absl/debugging/internal/address_is_readable.h',
+  'absl/debugging/internal/demangle.h',
+  'absl/debugging/internal/elf_mem_image.h',
+  'absl/debugging/internal/examine_stack.h',
+  'absl/debugging/internal/stack_consumption.h',
+  'absl/debugging/internal/vdso_support.h',
+)
+install_headers(absl_debugging_headers_internal, subdir:'absl/debugging/internal/')
+
+absl_flags_headers = files(
+  'absl/flags/commandlineflag.h',
+  'absl/flags/flag.h',
+  'absl/flags/marshalling.h',
+  'absl/flags/parse.h',
+  'absl/flags/reflection.h',
+  'absl/flags/usage_config.h',
+  'absl/flags/usage.h',
+)
+install_headers(absl_flags_headers, subdir:'absl/flags/')
+
+absl_flags_headers_internal = files(
+  'absl/flags/internal/commandlineflag.h',
+  'absl/flags/internal/flag.h',
+  'absl/flags/internal/program_name.h',
+  'absl/flags/internal/private_handle_accessor.h',
+  'absl/flags/internal/usage.h',
+)
+install_headers(absl_flags_headers_internal, subdir:'absl/flags/internal/')
+
+absl_hash_headers_internal = files(
+  'absl/hash/internal/city.h',
+  'absl/hash/internal/hash.h',
+  'absl/hash/internal/wyhash.h',
+)
+install_headers(absl_hash_headers_internal, subdir:'absl/hash/internal/')
+
+absl_numeric_headers = files(
+  'absl/numeric/int128.h',
+)
+install_headers(absl_numeric_headers, subdir:'absl/numeric/')
+
+absl_random_headers = files(
+  'absl/random/discrete_distribution.h',
+  'absl/random/gaussian_distribution.h',
+  'absl/random/seed_gen_exception.h',
+  'absl/random/seed_sequences.h',
+)
+install_headers(absl_random_headers, subdir:'absl/random/')
+absl_random_headers_internal = files(
+  'absl/random/internal/chi_square.h',
+  'absl/random/internal/distribution_test_util.h',
+  'absl/random/internal/pool_urbg.h',
+  'absl/random/internal/randen_detect.h',
+  'absl/random/internal/randen_hwaes.h',
+  'absl/random/internal/randen_slow.h',
+#  'absl/random/internal/randen_round_keys.cc',
+  'absl/random/internal/randen.h',
+  'absl/random/internal/seed_material.h',
+)
+install_headers(absl_random_headers_internal, subdir:'absl/random/internal/')
+
+absl_status_headers = files(
+  'absl/status/status_payload_printer.h',
+  'absl/status/status.h',
+  'absl/status/statusor.h',
+)
+install_headers(absl_status_headers, subdir:'absl/status/')
+
+absl_strings_headers = files(
+  'absl/strings/ascii.h',
+  'absl/strings/charconv.h',
+  'absl/strings/cord.h',
+  'absl/strings/escaping.h',
+  'absl/strings/match.h',
+  'absl/strings/numbers.h',
+  'absl/strings/str_cat.h',
+  'absl/strings/str_replace.h',
+  'absl/strings/str_split.h',
+  'absl/strings/string_view.h',
+  'absl/strings/substitute.h',
+)
+install_headers(absl_strings_headers, subdir:'absl/strings/')
+
+absl_strings_headers_internal = files(
+  'absl/strings/internal/charconv_bigint.h',
+  'absl/strings/internal/charconv_parse.h',
+  'absl/strings/internal/cord_internal.h',
+  'absl/strings/internal/cord_rep_ring.h',
+  'absl/strings/internal/escaping.h',
+  'absl/strings/internal/memutil.h',
+  'absl/strings/internal/ostringstream.h',
+  'absl/strings/internal/pow10_helper.h',
+  'absl/strings/internal/utf8.h',
+)
+install_headers(absl_strings_headers_internal, subdir:'absl/strings/internal/')
+
+absl_strings_headers_internal_str_format = files(
+  'absl/strings/internal/str_format/arg.h',
+  'absl/strings/internal/str_format/bind.h',
+  'absl/strings/internal/str_format/extension.h',
+  'absl/strings/internal/str_format/float_conversion.h',
+  'absl/strings/internal/str_format/output.h',
+  'absl/strings/internal/str_format/parser.h',
+)
+install_headers(absl_strings_headers_internal_str_format, subdir:'absl/strings/internal/str_format/')
+
+absl_synchronization_headers = files(
+  'absl/synchronization/barrier.h',
+  'absl/synchronization/blocking_counter.h',
+  'absl/synchronization/mutex.h',
+  'absl/synchronization/notification.h',
+)
+install_headers(absl_synchronization_headers, subdir:'absl/synchronization/')
+
+absl_synchronization_headers_internal = files(
+  'absl/synchronization/internal/create_thread_identity.h',
+  'absl/synchronization/internal/graphcycles.h',
+  'absl/synchronization/internal/per_thread_sem.h',
+  'absl/synchronization/internal/waiter.h',
+)
+install_headers(absl_strings_headers_internal_str_format, subdir:'absl/synchronization/internal/')
+
+absl_time_headers = files(
+  'absl/time/civil_time.h',
+  'absl/time/clock.h',
+#  'absl/time/duration.cc',
+#  'absl/time/format.cc',
+  'absl/time/time.h',
+)
+
+install_headers(absl_time_headers, subdir:'absl/time/')
+
+absl_time_headers_internal_cctz_src = files(
+#  'absl/time/internal/cctz/src/civil_time_detail.cc',
+  'absl/time/internal/cctz/src/time_zone_fixed.h',
+#  'absl/time/internal/cctz/src/time_zone_format.cc',
+  'absl/time/internal/cctz/src/time_zone_if.h',
+  'absl/time/internal/cctz/src/time_zone_impl.h',
+  'absl/time/internal/cctz/src/time_zone_info.h',
+  'absl/time/internal/cctz/src/time_zone_libc.h',
+#  'absl/time/internal/cctz/src/time_zone_lookup.cc',
+  'absl/time/internal/cctz/src/time_zone_posix.h',
+#  'absl/time/internal/cctz/src/zone_info_source.cc',
+)
+install_headers(absl_time_headers_internal_cctz_src, subdir:'absl/time/internal/cctz/src/')
+
+absl_time_headers_internal_cctz_include = files(
+  'absl/time/internal/cctz/include/cctz/civil_time_detail.h',
+  'absl/time/internal/cctz/include/cctz/zone_info_source.h',
+)
+install_headers(absl_time_headers_internal_cctz_include, subdir:'absl/time/internal/cctz/include/')
+
+absl_types_headers = files(
+  'absl/types/bad_any_cast.h',
+  'absl/types/bad_optional_access.h',
+  'absl/types/bad_variant_access.h',
+  'absl/types/optional.h',
+)
+install_headers(absl_types_headers, subdir:'absl/types/')
+
+absl_types_headers_internal = files(
+  'absl/types/internal/optional.h',
+)
+install_headers(absl_types_headers_internal, subdir:'absl/types/internal/')
+
+absl_memory_headers = files(
+  'absl/memory/memory.h',
+)
+install_headers(absl_memory_headers, subdir:'absl/memory/')
+
+absl_meta_headers = files(
+  'absl/meta/type_traits.h',
+)
+install_headers(absl_meta_headers, subdir:'absl/meta/')
+
+absl_utility_headers = files(
+  'absl/utility/utility.h',
+)
+install_headers(absl_utility_headers, subdir:'absl/utility/')
+
+##########################################################
+#   To build 1 single absl shared_library
+##########################################################
+
+#absl_sources = [absl_base_sources,
+#    absl_hash_sources,
+#    absl_numeric_sources,
+#    absl_strings_sources,
+#    absl_debugging_sources,
+#    absl_random_sources,
+#    absl_time_sources,
+#    absl_types_sources,
+#    absl_synchronization_sources,
+#    absl_container_sources,
+#    absl_flags_sources,
+#    absl_status_sources]
+
+#absl_lib = shared_library('absl',
+#  absl_sources,
+#  include_directories : absl_include_dir,
+#  c_args : cpp_flags,
+#  link_args : ['-pthread'],
+#  install : true,
+#  version : meson.project_version(),
+#)
+
+##########################################################
+#   install *.pc
+##########################################################
+pkg = import('pkgconfig')
+#pkg.generate(absl_lib,
+#  name : 'libabsl',
+#  description : 'Abseil Common Libraries (C++)',
+#  version :  meson.project_version(),
+#)
+
+pkg.generate(absl_base_lib,
+  name : 'libabsl_base',
+  description : 'Abseil Common Libraries (C++)',
+  version :  meson.project_version(),
+)
+
+pkg.generate(absl_hash_lib,
+  name : 'libabsl_hash',
+  description : 'Abseil Common Libraries (C++)',
+  version :  meson.project_version(),
+)
+
+#pkg.generate(absl_numeric_lib,
+#  name : 'libabsl_numeric',
+#  description : 'Abseil Common Libraries (C++)',
+#  version :  meson.project_version(),
+#)
+
+pkg.generate(absl_strings_lib,
+  name : 'libabsl_strings',
+  description : 'Abseil Common Libraries (C++)',
+  version :  meson.project_version(),
+)
+
+#pkg.generate(absl_debugging_lib,
+#  name : 'libabsl_debugging',
+#  description : 'Abseil Common Libraries (C++)',
+#  version :  meson.project_version(),
+#)
+
+#pkg.generate(absl_random_lib,
+#  name : 'libabsl_random',
+#  description : 'Abseil Common Libraries (C++)',
+#  version :  meson.project_version(),
+#)
+
+pkg.generate(absl_time_lib,
+  name : 'libabsl_time',
+  description : 'Abseil Common Libraries (C++)',
+  version :  meson.project_version(),
+)
+
+pkg.generate(absl_types_lib,
+  name : 'libabsl_types',
+  description : 'Abseil Common Libraries (C++)',
+  version :  meson.project_version(),
+)
+
+pkg.generate(absl_synchronization_lib,
+  name : 'libabsl_synchronization',
+  description : 'Abseil Common Libraries (C++)',
+  version :  meson.project_version(),
+)
+
+#pkg.generate(absl_container_lib,
+#  name : 'libabsl_container',
+#  description : 'Abseil Common Libraries (C++)',
+#  version :  meson.project_version(),
+#)
+
+#pkg.generate(absl_flags_lib,
+#  name : 'libabsl_flags',
+#  description : 'Abseil Common Libraries (C++)',
+#  version :  meson.project_version(),
+#)
+
+#pkg.generate(absl_status_lib,
+#  name : 'libabsl_status',
+#  description : 'Abseil Common Libraries (C++)',
+#  version :  meson.project_version(),
+#)
+
+##########################################################
+#   comment
+##########################################################
+
+# meson build --prefix=/home/syuu/Downloads/abseil-cpp-20210324.2/myout
+# ninja -C build
+# ninja install -C build
+
-- 
2.7.4

